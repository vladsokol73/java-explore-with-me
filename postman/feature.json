{
	"info": {
		"_postman_id": "96c597fe-1bdd-4a1b-b40c-de7142686ae8",
		"name": "feature",
		"schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json",
		"_exporter_id": "23225674"
	},
	"item": [
		{
			"name": "Add user",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Status code is 200\", function () {",
							"    pm.expect(pm.response.code).to.be.oneOf([200,201]);",
							"});",
							"pm.test(\"Test create user\", function () {",
							"    var jsonData = pm.response.json();",
							"    pm.expect(jsonData.id, '\"id\" field').to.eql(63);",
							"    pm.expect(jsonData.email, '\"email\" field').to.eql('user@user.com');",
							"    pm.expect(jsonData.name, '\"name\" field').to.eql('userName');",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "POST",
				"header": [
					{
						"key": "Content-Type",
						"value": "application/json",
						"type": "text"
					},
					{
						"key": "Accept",
						"value": "*/*",
						"type": "text"
					}
				],
				"body": {
					"mode": "raw",
					"raw": "{\n    \"name\": \"userName\",\n    \"email\": \"user@user.com\"\n}"
				},
				"url": {
					"raw": "{{baseUrl}}/admin/users",
					"host": [
						"{{baseUrl}}"
					],
					"path": [
						"admin",
						"users"
					]
				}
			},
			"response": []
		},
		{
			"name": "Add category",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Status code is 200\", function () {\r",
							"    pm.expect(pm.response.code).to.be.oneOf([200,201]);\r",
							"});\r",
							"pm.test(\"Test create category\", function () {\r",
							"    var jsonData = pm.response.json();\r",
							"    pm.expect(jsonData.id, '\"id\" field').to.eql(55);\r",
							"    pm.expect(jsonData.name, '\"name\" field').to.eql('Party');\r",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "POST",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "{\r\n  \"name\": \"Party\"\r\n}",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "{{baseUrl}}/admin/categories",
					"host": [
						"{{baseUrl}}"
					],
					"path": [
						"admin",
						"categories"
					]
				}
			},
			"response": []
		},
		{
			"name": "Add event",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Status code is 200\", function () {\r",
							"    pm.expect(pm.response.code).to.be.oneOf([201]);\r",
							"});\r",
							"pm.test(\"Test create event\", function () {\r",
							"    var jsonData = pm.response.json();\r",
							"    pm.expect(jsonData.id, '\"id\" field').to.eql(38);\r",
							"    pm.expect(jsonData.annotation, '\"annotation\" field').to.eql('Great party');\r",
							"    pm.expect(jsonData.description, '\"description\" field').to.eql('just a party');\r",
							"    pm.expect(jsonData.state, '\"state\" field').to.eql('PENDING');\r",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "POST",
				"header": [
					{
						"key": "Content-Type",
						"value": "application/json",
						"type": "text",
						"disabled": true
					},
					{
						"key": "",
						"value": "Accept",
						"type": "text",
						"disabled": true
					}
				],
				"body": {
					"mode": "raw",
					"raw": "{\r\n    \"annotation\": \"Great party\",\r\n    \"category\": 1,\r\n    \"description\": \"just a party\",\r\n    \"eventDate\": \"2023-07-14 00:00:00\",\r\n    \"location\": {\r\n        \"lat\": 55.754167,\r\n        \"lon\": 37.62\r\n    }, \r\n    \"paid\": false,\r\n    \"participantLimit\": 50,\r\n    \"requestModeration\": false,\r\n    \"title\": \"Bday party\"\r\n}",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "{{baseUrl}}/users/:userId/events",
					"host": [
						"{{baseUrl}}"
					],
					"path": [
						"users",
						":userId",
						"events"
					],
					"variable": [
						{
							"key": "userId",
							"value": "1"
						}
					]
				}
			},
			"response": []
		},
		{
			"name": "Add comment to event failed",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Status code is 400\", function () {\r",
							"    pm.expect(pm.response.code).to.be.oneOf([400]);\r",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "POST",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "{\r\n    \"text\": \"Add comment from user1\"\r\n}",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "{{baseUrl}}/users/:userId/comments/:eventId",
					"host": [
						"{{baseUrl}}"
					],
					"path": [
						"users",
						":userId",
						"comments",
						":eventId"
					],
					"variable": [
						{
							"key": "userId",
							"value": "63"
						},
						{
							"key": "eventId",
							"value": "38"
						}
					]
				}
			},
			"response": []
		},
		{
			"name": "Update event",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Status code is 200\", function () {\r",
							"    pm.expect(pm.response.code).to.be.oneOf([200]);\r",
							"});\r",
							"pm.test(\"Test update event\", function () {\r",
							"    var jsonData = pm.response.json();\r",
							"    pm.expect(jsonData.id, '\"id\" field').to.eql(38);\r",
							"    pm.expect(jsonData.annotation, '\"annotation\" field').to.eql('Great party');\r",
							"    pm.expect(jsonData.description, '\"description\" field').to.eql('just a party');\r",
							"    pm.expect(jsonData.state, '\"state\" field').to.eql('PUBLISHED');\r",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "PATCH",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "{\r\n    \"annotation\": \"Great party\",\r\n    \"category\": 1,\r\n    \"description\": \"just a party\",\r\n    \"eventDate\": \"2023-07-14 00:00:00\",\r\n    \"location\": {\r\n        \"lat\": 55.754167,\r\n        \"lon\": 37.62\r\n    }, \r\n    \"paid\": false,\r\n    \"participantLimit\": 50,\r\n    \"requestModeration\": false,\r\n    \"stateAction\": \"PUBLISH_EVENT\",\r\n    \"title\": \"Bday party\"\r\n}",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "{{baseUrl}}/admin/events/:eventId",
					"host": [
						"{{baseUrl}}"
					],
					"path": [
						"admin",
						"events",
						":eventId"
					],
					"variable": [
						{
							"key": "eventId",
							"value": "38"
						}
					]
				}
			},
			"response": []
		},
		{
			"name": "Add user 2",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Status code is 200\", function () {",
							"    pm.expect(pm.response.code).to.be.oneOf([200,201]);",
							"});",
							"pm.test(\"Test create user2\", function () {",
							"    var jsonData = pm.response.json();",
							"    pm.expect(jsonData.id, '\"id\" field').to.eql(64);",
							"    pm.expect(jsonData.email, '\"email\" field').to.eql('user2@yandex.com');",
							"    pm.expect(jsonData.name, '\"name\" field').to.eql('userName2');",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "POST",
				"header": [
					{
						"key": "Content-Type",
						"value": "application/json",
						"type": "text"
					},
					{
						"key": "Accept",
						"value": "*/*",
						"type": "text"
					}
				],
				"body": {
					"mode": "raw",
					"raw": "{\n    \"name\": \"userName2\",\n    \"email\": \"user2@yandex.com\"\n}"
				},
				"url": {
					"raw": "{{baseUrl}}/admin/users",
					"host": [
						"{{baseUrl}}"
					],
					"path": [
						"admin",
						"users"
					]
				}
			},
			"response": []
		},
		{
			"name": "Add comment to event1 from user1",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Status code is 200\", function () {\r",
							"    pm.expect(pm.response.code).to.be.oneOf([201]);\r",
							"});\r",
							"pm.test(\"Test add comment to item 1 from user1\", function () {\r",
							"    var jsonData = pm.response.json();\r",
							"    \r",
							"    pm.expect(jsonData.id, '\"id\" field').to.eql(1);\r",
							"    pm.expect(jsonData.text, '\"text\" field').to.eql(\"Add comment from user1\");\r",
							"    pm.expect(jsonData.authorName, '\"authorName\" field').to.eql(\"userName\");\r",
							"    pm.expect(jsonData.state, '\"state\" field').to.eql(\"PENDING\");\r",
							"    pm.expect(jsonData.created, '\"created\" field').not.null;\r",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "POST",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "{\r\n    \"text\": \"Add comment from user1\"\r\n}",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "{{baseUrl}}/users/:userId/comments/:eventId",
					"host": [
						"{{baseUrl}}"
					],
					"path": [
						"users",
						":userId",
						"comments",
						":eventId"
					],
					"variable": [
						{
							"key": "userId",
							"value": "63"
						},
						{
							"key": "eventId",
							"value": "38"
						}
					]
				}
			},
			"response": []
		},
		{
			"name": "Add comment to event1 from user2",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Status code is 200\", function () {\r",
							"    pm.expect(pm.response.code).to.be.oneOf([201]);\r",
							"});\r",
							"pm.test(\"Test add comment to item 1 from user2\", function () {\r",
							"    var jsonData = pm.response.json();\r",
							"    \r",
							"    pm.expect(jsonData.id, '\"id\" field').to.eql(2);\r",
							"    pm.expect(jsonData.text, '\"text\" field').to.eql(\"Add comment from user2\");\r",
							"    pm.expect(jsonData.authorName, '\"authorName\" field').to.eql(\"userName2\");\r",
							"    pm.expect(jsonData.state, '\"state\" field').to.eql(\"PENDING\");\r",
							"    pm.expect(jsonData.created, '\"created\" field').not.null;\r",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "POST",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "{\r\n    \"text\": \"Add comment from user2\"\r\n}",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "{{baseUrl}}/users/:userId/comments/:eventId",
					"host": [
						"{{baseUrl}}"
					],
					"path": [
						"users",
						":userId",
						"comments",
						":eventId"
					],
					"variable": [
						{
							"key": "userId",
							"value": "64"
						},
						{
							"key": "eventId",
							"value": "38"
						}
					]
				}
			},
			"response": []
		},
		{
			"name": "Update comment1 by admin",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Status code is 200\", function () {\r",
							"    pm.expect(pm.response.code).to.be.oneOf([200]);\r",
							"});\r",
							"\r",
							"pm.test(\"Test update comment1 by admin\", function () {\r",
							"    var jsonData = pm.response.json();\r",
							"\r",
							"    pm.expect(jsonData.id, '\"id\" field').to.eql(1);\r",
							"    pm.expect(jsonData.text, '\"text\" field').to.eql('Add comment from user1');\r",
							"    pm.expect(jsonData.authorName, '\"authorName\" field').to.eql('userName');\r",
							"    pm.expect(jsonData.state, '\"state\" field').to.eql('PUBLISHED');\r",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "PATCH",
				"header": [],
				"url": {
					"raw": "{{baseUrl}}/admin/comments/:commentId?approved=true",
					"host": [
						"{{baseUrl}}"
					],
					"path": [
						"admin",
						"comments",
						":commentId"
					],
					"query": [
						{
							"key": "approved",
							"value": "true"
						}
					],
					"variable": [
						{
							"key": "commentId",
							"value": "1"
						}
					]
				}
			},
			"response": []
		},
		{
			"name": "Get comment by admin",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Status code is 200\", function () {\r",
							"    pm.expect(pm.response.code).to.be.oneOf([200]);\r",
							"});\r",
							"pm.test(\"Get comment by admin\", function () {\r",
							"    var jsonData = pm.response.json();\r",
							"    pm.expect(jsonData.length, 'items count in total').to.eql(2);\r",
							"\r",
							"    pm.expect(jsonData[1].id, 'result[0]: \"id\" field').to.eql(1);\r",
							"    pm.expect(jsonData[1].text, 'result[0]: \"text\" field').to.eql(\"Add comment from user1\");\r",
							"    pm.expect(jsonData[1].authorName, 'result[0]: \"authorName\" field').to.eql('userName');\r",
							"    pm.expect(jsonData[1].state, 'result[0]: \"state\" field').to.eql('PUBLISHED');\r",
							"\r",
							"    pm.expect(jsonData[0].id, 'result[0]: \"id\" field').to.eql(2);\r",
							"    pm.expect(jsonData[0].text, 'result[0]: \"text\" field').to.eql(\"Add comment from user2\");\r",
							"    pm.expect(jsonData[0].authorName, 'result[0]: \"authorName\" field').to.eql('userName2');\r",
							"    pm.expect(jsonData[0].state, 'result[0]: \"state\" field').to.eql('PENDING');\r",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "GET",
				"header": [],
				"url": {
					"raw": "{{baseUrl}}/admin/comments?text=comment",
					"host": [
						"{{baseUrl}}"
					],
					"path": [
						"admin",
						"comments"
					],
					"query": [
						{
							"key": "text",
							"value": "comment"
						}
					]
				}
			},
			"response": []
		},
		{
			"name": "Update comment2 by admin",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Status code is 200\", function () {\r",
							"    pm.expect(pm.response.code).to.be.oneOf([200]);\r",
							"});\r",
							"pm.test(\"Test update comment2 by admin\", function () {\r",
							"    var jsonData = pm.response.json();\r",
							"    pm.expect(jsonData.id, '\"id\" field').to.eql(2);\r",
							"    pm.expect(jsonData.text, '\"text\" field').to.eql('Add comment from user2');\r",
							"    pm.expect(jsonData.authorName, '\"authorName\" field').to.eql('userName2');\r",
							"    pm.expect(jsonData.state, '\"state\" field').to.eql('PUBLISHED');\r",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "PATCH",
				"header": [],
				"url": {
					"raw": "{{baseUrl}}/admin/comments/:commentId?approved=true",
					"host": [
						"{{baseUrl}}"
					],
					"path": [
						"admin",
						"comments",
						":commentId"
					],
					"query": [
						{
							"key": "approved",
							"value": "true"
						}
					],
					"variable": [
						{
							"key": "commentId",
							"value": "2"
						}
					]
				}
			},
			"response": []
		},
		{
			"name": "Update coment1 by user1",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Status code is 200\", function () {\r",
							"    pm.expect(pm.response.code).to.be.oneOf([200]);\r",
							"});\r",
							"pm.test(\"Test update  comment to item 1 from user1\", function () {\r",
							"    var jsonData = pm.response.json();\r",
							"    pm.expect(jsonData.id, '\"id\" field').to.eql(1);\r",
							"\r",
							"    pm.expect(jsonData.text, '\"text\" field').to.eql(\"Update comment from user1\");\r",
							"    pm.expect(jsonData.authorName, '\"authorName\" field').to.eql(\"userName\");\r",
							"    pm.expect(jsonData.state, '\"state\" field').to.eql(\"PUBLISHED\");\r",
							"    pm.expect(jsonData.created, '\"created\" field').not.null;\r",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "PATCH",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "{\r\n    \"text\": \"Update comment from user1\"\r\n}",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "{{baseUrl}}/users/:userId/comments/:commentId",
					"host": [
						"{{baseUrl}}"
					],
					"path": [
						"users",
						":userId",
						"comments",
						":commentId"
					],
					"variable": [
						{
							"key": "userId",
							"value": "63"
						},
						{
							"key": "commentId",
							"value": "1"
						}
					]
				}
			},
			"response": []
		},
		{
			"name": "Get comment by  event",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Status code is 200\", function () {\r",
							"    pm.expect(pm.response.code).to.be.oneOf([200]);\r",
							"});\r",
							"pm.test(\"Test Get comment by event\", function () {\r",
							"    var jsonData = pm.response.json();\r",
							"    pm.expect(jsonData.length, 'items count in total').to.eql(2);\r",
							"\r",
							"    pm.expect(jsonData[1].id, 'result[0]: \"id\" field').to.eql(1);\r",
							"    pm.expect(jsonData[1].authorName, 'result[0]: \"authorName\" field').to.eql('userName');\r",
							"    pm.expect(jsonData[1].state, 'result[0]: \"state\" field').to.eql('PUBLISHED');\r",
							"\r",
							"    pm.expect(jsonData[0].id, 'result[0]: \"id\" field').to.eql(2);\r",
							"    pm.expect(jsonData[0].authorName, 'result[0]: \"authorName\" field').to.eql('userName2');\r",
							"    pm.expect(jsonData[0].state, 'result[0]: \"state\" field').to.eql('PUBLISHED');\r",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "GET",
				"header": [],
				"url": {
					"raw": "{{baseUrl}}/events/:id/comments",
					"host": [
						"{{baseUrl}}"
					],
					"path": [
						"events",
						":id",
						"comments"
					],
					"variable": [
						{
							"key": "id",
							"value": "38"
						}
					]
				}
			},
			"response": []
		},
		{
			"name": "Delete comment",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Status code is 200\", function () {\r",
							"    pm.expect(pm.response.code).to.be.oneOf([204]);\r",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "DELETE",
				"header": [],
				"url": {
					"raw": "{{baseUrl}}/users/:userId/comments/:commentId",
					"host": [
						"{{baseUrl}}"
					],
					"path": [
						"users",
						":userId",
						"comments",
						":commentId"
					],
					"variable": [
						{
							"key": "userId",
							"value": "63"
						},
						{
							"key": "commentId",
							"value": "1"
						}
					]
				}
			},
			"response": []
		},
		{
			"name": "Get commen by user not foud",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Status code is 404\", function () {\r",
							"    pm.expect(pm.response.code).to.be.oneOf([404]);\r",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "GET",
				"header": [],
				"url": {
					"raw": "{{baseUrl}}/users/:userId/comments/:commentId",
					"host": [
						"{{baseUrl}}"
					],
					"path": [
						"users",
						":userId",
						"comments",
						":commentId"
					],
					"variable": [
						{
							"key": "userId",
							"value": "63"
						},
						{
							"key": "commentId",
							"value": "1"
						}
					]
				}
			},
			"response": []
		},
		{
			"name": "Get comment by user",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Status code is 200\", function () {\r",
							"    pm.expect(pm.response.code).to.be.oneOf([200]);\r",
							"});\r",
							"pm.test(\"Test get comment by user\", function () {\r",
							"    var jsonData = pm.response.json();\r",
							"    pm.expect(jsonData.id, '\"id\" field').to.eql(2);\r",
							"    pm.expect(jsonData.text, '\"text\" field').to.eql(\"Add comment from user2\");\r",
							"    pm.expect(jsonData.authorName, '\"authorName\" field').to.eql(\"userName2\");\r",
							"    pm.expect(jsonData.state, '\"state\" field').to.eql(\"PUBLISHED\");\r",
							"    pm.expect(jsonData.created, '\"created\" field').not.null;\r",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "GET",
				"header": [],
				"url": {
					"raw": "{{baseUrl}}/users/:userId/comments/:commentId",
					"host": [
						"{{baseUrl}}"
					],
					"path": [
						"users",
						":userId",
						"comments",
						":commentId"
					],
					"variable": [
						{
							"key": "userId",
							"value": "64"
						},
						{
							"key": "commentId",
							"value": "2"
						}
					]
				}
			},
			"response": []
		}
	],
	"event": [
		{
			"listen": "prerequest",
			"script": {
				"type": "text/javascript",
				"exec": [
					""
				]
			}
		},
		{
			"listen": "test",
			"script": {
				"type": "text/javascript",
				"exec": [
					""
				]
			}
		}
	],
	"variable": [
		{
			"key": "baseUrl",
			"value": "http://localhost:8080",
			"type": "string"
		}
	]
}